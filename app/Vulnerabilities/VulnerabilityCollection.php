<?php

namespace App\Vulnerabilities;

use App\Parser\VariableContext;
use Illuminate\Support\Collection;
use PhpParser\Node\Expr;
use PhpParser\Node\Expr\CallLike;

class VulnerabilityCollection extends Collection
{
    public function findExecutedBy(CallLike $callLike, VariableContext $context): ?BaseVulnerability
    {
        foreach ($this as $vulnerability) {
            /**
             * @var BaseVulnerability $vulnerability
             */
            if ($vulnerability->isExecutedBy($callLike, $context)) {
                return $vulnerability;
            }
        }

        return null;
    }

    public function findByVulnerableExpression(Expr $expr): ?BaseVulnerability
    {
        foreach ($this as $vulnerability) {
            /**
             * @var BaseVulnerability $vulnerability
             */
            if ($vulnerability->isVulnerableExpression($expr)) {
                return $vulnerability;
            }
        }

        return null;
    }


}
